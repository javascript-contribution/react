{"version":3,"file":"static/js/684.4a04152d.chunk.js","mappings":"oWAOMA,EAAoB,CACxBC,YAAa,GACbC,MAAO,GACPC,SAAU,GACVC,gBAAiB,IAGJ,SAASC,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAGA,GAHA,MACiBC,EAAAA,EAAAA,OAEmBJ,EAAAA,EAAAA,UAASN,IAA7C,eAAOW,EAAP,KAAmBC,EAAnB,KACQX,EAAkDU,EAAlDV,YAAaC,EAAqCS,EAArCT,MAAOC,EAA8BQ,EAA9BR,SAAUC,EAAoBO,EAApBP,gBAChCS,GAAWC,EAAAA,EAAAA,MAMXC,EAAY,mCAAG,WAAOC,GAAP,oEACnBA,EAAMC,iBAEFd,IAAaC,EAHE,uBAIjBI,EAAS,0BAJQ,0BAQnB,IACEK,GAASK,EAAAA,EAAAA,IAAYhB,EAAOC,EAAUF,IAZxCW,EAAcZ,GAcZ,MAAOO,GACFA,EAAoBY,OAASC,EAAAA,GAAAA,aAChCC,MAAM,4CAENC,QAAQC,IAAI,qCAAsChB,GAfnC,2CAAH,sDAoBZiB,EAAe,SAACR,GACpB,MAAwBA,EAAMS,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdf,GAAc,kBAAKD,GAAN,cAAmBe,EAAOC,MAGzC,OACE,iCACE,SAAC,IAAD,WACE,UAAC,SAAD,YACE,eAAIC,UAAU,mBAAd,qBACCrB,IAAS,SAAC,IAAD,CAAOsB,QAAQ,SAAf,SAAyBtB,KACnC,UAAC,IAAD,CAAMuB,SAAUf,EAAhB,WACE,UAAC,UAAD,CAAYgB,GAAG,cAAf,WACE,SAAC,UAAD,4BACA,SAAC,YAAD,CACEC,KAAK,cACLC,SAAUT,EACVE,KAAK,cACLC,MAAO1B,EACPiC,UAAQ,QAGZ,UAAC,UAAD,CAAYH,GAAG,QAAf,WACE,SAAC,UAAD,qBACA,SAAC,YAAD,CACEC,KAAK,QACLC,SAAUT,EACVE,KAAK,QACLC,MAAOzB,EACPgC,UAAQ,QAGZ,UAAC,UAAD,CAAYH,GAAG,WAAf,WACE,SAAC,UAAD,wBACA,SAAC,YAAD,CACEC,KAAK,WACLC,SAAUT,EACVE,KAAK,WACLC,MAAOxB,EACP+B,UAAQ,QAGZ,UAAC,UAAD,CAAYH,GAAG,mBAAf,WACE,SAAC,UAAD,qCACA,SAAC,YAAD,CACEC,KAAK,WACLC,SAAUT,EACVE,KAAK,kBACLC,MAAOvB,EACP8B,UAAQ,QAGZ,SAAC,IAAD,CAAQC,SAAU1B,EAASmB,UAAU,QAAQI,KAAK,SAAlD,8BAMN,iBAAKJ,UAAU,yBAAf,uCAC2B,SAAC,KAAD,CAAMQ,GAAG,sBAAT","sources":["Components/Authentication/SignUpWithFirebase/index.tsx"],"sourcesContent":["import { useState, FormEvent, ChangeEvent } from \"react\";\nimport { AuthError, AuthErrorCodes } from \"firebase/auth\";\nimport { useDispatch } from \"react-redux\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { signUpStart } from \"../../../States/Redux/Users/user.action\";\n\nconst defaultFormFields = {\n  displayName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\n\nexport default function SignUp() {\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const { displayName, email, password, confirmPassword } = formFields;\n  const dispatch = useDispatch();\n\n  const resetFormFields = () => {\n    setFormFields(defaultFormFields);\n  };\n\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      setError(\"passwords do not match\");\n      return;\n    }\n\n    try {\n      dispatch(signUpStart(email, password, displayName));\n      resetFormFields();\n    } catch (error) {\n      if ((error as AuthError).code === AuthErrorCodes.EMAIL_EXISTS) {\n        alert(\"Cannot create user, email already in use\");\n      } else {\n        console.log(\"user creation encountered an error\", error);\n      }\n    }\n  };\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    setFormFields({ ...formFields, [name]: value });\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Sign Up</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"displayName\">\n              <Form.Label>Display Name</Form.Label>\n              <Form.Control\n                type=\"displayName\"\n                onChange={handleChange}\n                name=\"displayName\"\n                value={displayName}\n                required\n              />\n            </Form.Group>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                onChange={handleChange}\n                name=\"email\"\n                value={email}\n                required\n              />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                onChange={handleChange}\n                name=\"password\"\n                value={password}\n                required\n              />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control\n                type=\"password\"\n                onChange={handleChange}\n                name=\"confirmPassword\"\n                value={confirmPassword}\n                required\n              />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Sign Up\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Already have an account? <Link to=\"/authenticate/login\">Log In</Link>\n      </div>\n    </>\n  );\n}\n"],"names":["defaultFormFields","displayName","email","password","confirmPassword","SignUp","useState","error","setError","loading","useNavigate","formFields","setFormFields","dispatch","useDispatch","handleSubmit","event","preventDefault","signUpStart","code","AuthErrorCodes","alert","console","log","handleChange","target","name","value","className","variant","onSubmit","id","type","onChange","required","disabled","to"],"sourceRoot":""}